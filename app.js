// ===== basePath: –≤—ã—á–∏—Å–ª—è–µ–º –ø–æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–º—É URL app.js =====
function getBasePath() {
  // —Ç–µ–∫—É—â–∏–π <script> –∏–ª–∏ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
  const current = document.currentScript || document.querySelector('script[src$="app.js"],script[src*="/app.js"]');
  if (!current) return "/"; // fallback
  const u = new URL(current.src, window.location.origin);
  // –æ—Ç—Ä–µ–∑–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ -> –æ—Å—Ç–∞—ë—Ç—Å—è –∫–∞—Ç–∞–ª–æ–≥, –Ω–∞–ø—Ä. "/family-gifts/"
  return u.pathname.replace(/[^/]+$/, "");
}
const basePath = getBasePath();

// ===== –µ—Å–ª–∏ –ø—Ä–∏—à–ª–∏ —Å 404.html ‚Äî –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–º –ø—É—Ç—å –≤ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ =====
const savedPath = sessionStorage.getItem("redirectPath");
if (savedPath) {
  sessionStorage.removeItem("redirectPath");
  // —á—Ç–æ–±—ã –Ω–µ –¥—ë—Ä–≥–∞—Ç—å –ª–∏—à–Ω–∏–π —Ä–∞–∑ history, –ø—Ä–æ–≤–µ—Ä–∏–º —Ç–µ–∫—É—â–∏–π URL –ø–æ—Å–ª–µ basePath
  const after = window.location.pathname.replace(basePath, "").replace(/^\/+|\/+$/g, "");
  if (after !== savedPath) {
    history.replaceState({}, "", basePath + savedPath);
  }
}

// ===== DOM =====
const giftListEl = document.getElementById("gift-list");
const hideGiftedEl = document.getElementById("hide-gifted");
const hideCanceledEl = document.getElementById("hide-canceled");
const tabs = document.querySelectorAll("#tabs a");

function getCurrentMember() {
  const path = window.location.pathname.replace(basePath, "").replace(/^\/+|\/+$/g, "");
  return ["kostya", "zhenya", "polina"].includes(path) ? path : "kostya";
}

async function loadGifts(member) {
  giftListEl.innerHTML = "<p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>";
  const url = `${basePath}data/${member}.json`;
  try {
    const res = await fetch(url, { cache: "no-store" });
    if (!res.ok) throw new Error(`HTTP ${res.status} –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ ${url}`);
    const gifts = await res.json();
    renderGifts(gifts);
  } catch (err) {
    console.error("[family-gifts] –û—à–∏–±–∫–∞:", err);
    giftListEl.innerHTML = `<p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–¥–∞—Ä–∫–æ–≤.</p>`;
  }
}

function renderGifts(gifts) {
  const hideGifted = hideGiftedEl.checked;
  const hideCanceled = hideCanceledEl.checked;

  const filtered = gifts.filter(g => {
    if (hideGifted && g.gifted) return false;
    if (hideCanceled && g.canceled) return false;
    return true;
  });

  if (filtered.length === 0) {
    giftListEl.innerHTML = "<p>–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç üéâ</p>";
    return;
  }

  giftListEl.innerHTML = "";
  filtered.forEach(g => {
    const el = document.createElement("div");
    el.className = "gift";
    el.innerHTML = `
      <img src="${g.image}" alt="${g.title}" />
      <div>
        <h3><a href="${g.link}" target="_blank" rel="noopener noreferrer">${g.title}</a></h3>
        <p>–¶–µ–Ω–∞: ${g.price}</p>
        ${g.gifted ? "<p>‚úÖ –£–∂–µ –ø–æ–¥–∞—Ä–µ–Ω</p>" : ""}
        ${g.canceled ? "<p>‚ùå –û—Ç–º–µ–Ω—ë–Ω</p>" : ""}
      </div>
    `;
    giftListEl.appendChild(el);
  });
}

function setActiveTab(member) {
  tabs.forEach(tab => tab.classList.toggle("active", tab.dataset.member === member));
}

function navigate(member) {
  history.pushState({}, "", `${basePath}${member}`);
  setActiveTab(member);
  loadGifts(member);
}

// –∫–ª–∏–∫–∏ –ø–æ —Ç–∞–±–∞–º
tabs.forEach(tab => tab.addEventListener("click", e => {
  e.preventDefault();
  navigate(tab.dataset.member);
}));

// —Ñ–∏–ª—å—Ç—Ä—ã
hideGiftedEl.addEventListener("change", () => loadGifts(getCurrentMember()));
hideCanceledEl.addEventListener("change", () => loadGifts(getCurrentMember()));

// –ø–µ—Ä–µ—Ö–æ–¥—ã –ø–æ –∏—Å—Ç–æ—Ä–∏–∏
window.addEventListener("popstate", () => {
  const member = getCurrentMember();
  setActiveTab(member);
  loadGifts(member);
});

// init
const member = getCurrentMember();
setActiveTab(member);
loadGifts(member);
